plugins {
    id 'java'
    id "io.github.goooler.shadow" version "8.1.8"
}

ext {
    project_name = 'PluginTemplate'
	project_author = 'Anonymous'
	project_version = '1.0.0'
	
	project_api_version = '1.21'

    project_group = 'com.example'
    project_artifactId = 'template'
    project_main_class_name = 'PluginTemplateMain'
	
    project_main = project_group + "." + project_artifactId + "." + project_main_class_name
	
	foundation_version = '6.9.4'
}

shadowJar {
    archiveFileName = project_name + ".jar"
}

repositories {
    mavenLocal()
    mavenCentral()

    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven { url = "https://oss.sonatype.org/content/groups/public/" }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT")

    implementation("com.github.kangarko:Foundation:" + foundation_version)
}

tasks.shadowJar {
    relocate 'org.mineacademy.fo', project_group + project_artifactId + '.foundation'
    dependencies {
        include(dependency("com.github.kangarko:Foundation"))
    }
}

tasks.build {
    dependsOn tasks.shadowJar
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [
            version: project_version,
            author: project_author,
            name: project_name,
            main: project_main,
            api_version: project_api_version
    ]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}